Ok, at least now you see that it's absolutely pointless to try to invent your own "crypto" with expectations that if someone doesn't know the algorithm (even twice the base64, which is pretty stupid) it's impossible for him to decipher. You're reading this now in plain text so that argument clearly falls short.
Now the actual tasks:
1. Write a piece of software to attack single-byte XOR cipher which is the same as Caesar but with xor op.
2. ]|d3gaj3r3avcvrgz}t>xvj3K\A3pzc{va=3V=t=3zg3`{|f.w3grxv3r3`gaz}t31{v..|3d|a.w13r}w?3tzev}3g{v3xvj3z`31xvj1?3k|a3g{v3uza`g3.vggva31{13dzg{31x1?3g{v}3k|a31v13dzg{31v1?3g{v}31.13dzg{31j1?3r}w3g{v}3k|a3}vkg3p{ra31.13dzg{31x13rtrz}?3g{v}31|13dzg{31v13r}w3`|3|}=3J|f3~rj3f`v3z}wvk3|u3p|z}pzwv}pv?3[r~~z}t3wz`gr}pv?3Xr`z`xz3vkr~z}rgz|}?3`grgz`gzpr.3gv`g`3|a3d{rgveva3~vg{|w3j|f3uvv.3d|f.w3`{|d3g{v3qv`g3av`f.g=
2. Now try a repeating-key XOR cipher.
   E.g. it shou=d take a string "he==o wor=d" and, given the key is "key",
   xor the first =etter "h" with "k",
   then xor "e" with "e", then "=" with "y",
   and then xor next char "=" with "k" again,
   then "o" with "e" and so on.
   You may use index of coincidence,
   Hamming distance,
   Kasiski examination,
   statistica= tests or whatever method you fee= wou=d show the best resu=t.
3. 1c41023f564b2a130824570e6b47046b521f3f5208201318245e0e6b40022643072e13183e51183f5a1f3e4702245d4b285a1b23561965133f2413192e571e28564b3f5b0e6b50042643072e4b023f4a4b24554b3f5b0238130425564b3c564b3c5a0727131e38564b245d0732131e3b430e39500a38564b27561f3f5619381f4b385c4b3f5b0e6b580e32401b2a500e6b5a186b5c05274a4b79054a6b67046b540e3f131f235a186b5c052e13192254033f130a3e470426521f22500a275f126b4a043e131c225f076b431924510a295f126b5d0e2e574b3f5c4b3e400e6b400426564b385c193f13042d130c2e5d0e3f5a086b52072c5c192247032613433c5b02285b4b3c5c1920560f6b47032e13092e401f6b5f0a38474b32560a391a476b40022646072a470e2f130a255d0e2a5f0225544b24414b2c410a2f5a0e25474b2f56182856053f1d4b185619225c1e385f1267131c395a1f2e13023f13192254033f13052444476b4a043e131c225f076b5d0e2e574b22474b3f5c4b2f56082243032e414b3f5b0e6b5d0e33474b245d0e6b52186b440e275f456b710e2a414b225d4b265a052f1f4b3f5b0e395689cbaa186b5d046b401b2a500e381d61
3. Write a code to attack some simple substitution cipher.
   To reduce the complexity of this one we will use only uppercase letters,
   so the keyspace is only 26! To get this one right automatically you will
   probably need to use some sort of genetic algorithm (which worked the best last year),
   simulated annealing or gradient descent.
   Seriously, write it right now, you will need it to decipher the next one as well.
   Bear in mind, thereâs no spaces.
4. EFFPQLEKVTVPCPYFLMVHQLUEWCNVWFYGHYTCETHQEKLPVMSAKSPVPAPVYWMVHQLUSPQLYWLASLFVWPQLMVHQLUPLRPSQLULQESPBLWPCSVRVWFLHLWFLWPUEWFYOTCMQYSLWOYWYETHQEKLPVMSAKSPVPAPVYWHEPPLUWSGYULEMQTLPPLUGUYOLWDTVSQETHQEKLPVPVSMTLEUPQEPCYAMEWWYOYULULTCYWPQLSEOLSVOHTLUYAPVWLYGDALSSVWDPQLNLCKCLRQEASPVILSLEUMQBQVMQCYAHUYKEKTCASLFPYFLMVHQLUHULIVYASHEUEDUEHQBVTTPQLVWFLRYGMYVWMVFLWMLSPVTTBYUNESESADDLSPVYWCYAMEWPUCPYFVIVFLPQLOLSSEDLVWHEUPSKCPQLWAOKLUYGMQEUEMPLUSVWENLCEWFEHHTCGULXALWMCEWETCSVSPYLEMQYGPQLOMEWCYAGVWFEBECPYASLQVDQLUYUFLUGULXALWMCSPEPVSPVMSBVPQPQVSPCHLYGMVHQLUPQLWLRPHEUEDUEHQMYWPEVWSSYOLHULPPCVWPLULSPVWDVWGYUOEPVYWEKYAPSYOLEFFVPVYWETULBEUF
4. ADD THE ABILITY TO DECIPHER ANY KIND OF POLYALPHABETIC SUBSTITUTION CIPHERS.
   THE ONE USED IN THE CIPHER TEXTS HERE HAS TWENTY SIX INDEPENDENT RANDOMLY
   CHOSEN MONOALPHABETIC SUBSTITUTION PATTERNS FOR EACH LETTER FROM
   ENGLISH ALPHABET. IT IS CLEAR THAT YOU CAN NO MORE RELY ON THE
   SAME SIMPLE ROUTINE OF GUESSING THE KEY BY EXHAUSTIVE SEARCH
   WHICH YOU PROBABLY USED TO DECIPHER PREVIOUS PARAGRAPH.
   WILL THE INDEX OF COINCIDENCE STILL WORK? AS A SUGGESTION
   YOU CAN TRY TO DIVIDE THE MESSAGE IN PARTS BY THE NUMBER
   OF CHARACTERS IN A KEY AND APPLY FREQUENCY ANALYSIS TO EACH
   OF THEM. CAN YOU FIND A WAY TO USE HIGHER ORDER FREQUENCY
   STATISTICS WITH THIS TYPE OF CIPHER? THE NEXT PARAGRAPH
   CONTAINS SOME PRETTY INTERESTING INFORMATION ABOUT SOME ADDITIONAL REWARD
5. MULDCLZWKLZTWTXHJCXEDQLHLXIHBLLJDQWHDQUZSOBCKMEKWXRABUGADQZOBLQNNXMJSYXDWYZFNKINEUICNJNHSUTTNQZTQNGFCYYJCNEANNXHNKSADQZVDSEDCLRSWRZSAQMFMXOJSYCFSYETSQZSBOSNMSIVNCBCWRXVBGIBAGKFMLZTWTBBFUOJESIIBGEPBRNAKMYTYOSCWTZSBYSPCCZFCMBBXTIUBSXTNMENRNKADQRFCYQZVLKFUZYZNNJZMYKONUKFWAGFCYYJUCQNNYSCENBVKNTSWOSKCMRHFYYJKLXHECSKBZIAKJSHJNKWMAWFSNXHWRICYYYJESIIBYYTFHENNNLKCMRHBOZJZYINDHOFFYZSBKEPYNXHVUNKDTDJNZIHJQIGEHSVWHWZKEYZINZTMGIVJNQNAYNHAHIIBQXFQNZJMKLTLXSNNUMPAWSHJNCPVEZZSLKONCCZRLWBCUOHJNQTTKZQASSKNCBCQCXNENKABOTFCOXGDTNZKHWKJLLDBOCSDSEKNNQNINGFCNSCMSWVNCBCQNECATDABQXKWDFTSLZTWTXFUHSHNNQNATCAXOSQVUNGDMTZSYZFFNEPMKGFCLTZVYBWFNUCWZLVKLICNNJHDYZZMAENVUNKDTDWBQXNWDSEWSMNWSSUBTRSCLXJFRQFQYYJKLXHELQZTSEVJEQFGCMTSPZSBEQFTSEGRCZSEUXNAJKJEHETSYSYNEYPDQSNYUSNSUZGDASTNTBHDXZFQLZTMLLQFUOJESSVCUCJFQICTZBCNKNPNLXEBHK
6. DSMZMACXZLHGVRDVRAZMJRAGEVBECTOKZIMARVVCHVZRTADECMYEXPYJGOHAYTJCRJVGRIVLOGTEUAJLFRTUOURGZHNRNYMCLXGSHVGBJYQMMCJHDDTAXEHNTRTJKJMUYJREERTLSGHMARUSQVMVGYYMVRGCEUINHGEEUJKORQJCDYNCBZSASUUBCOEQSYHRYHSCTKCSHGTQRJCXWNJIALYDSGHMARYGAVOZQLJENWPVBUINKGCVLALUCXJXGHHRRSRTELRCSYSARGVYUVCSHXUMYTUGMMENRIJMDJKALNIUTSUCRJGMHGRORHNJMOCEHIVNEYDNYEIMVVNRTXMMRXAHNSUEFLOEXDMPILCWCMEVLUIMTFPCZWMCLQRNXSZPMMIQHSDUVVMASAFXSZJWRDTUMUIFDZHJTXHOARAGDVLNMQMXBFLOLSHMJGZMPVGUATVLZPYLUEMGIVJOXAGOHPILESEACXWNJVGCJCQMMORTVMSVAXYJVBHRYCOVHSCLXGRJGOHAVLUKQOULHHRNXMAMULIKVTHSQALNEAJOZWMCLFBEROUFUULXHMACDEUTSURQJRAMDVDZUPFIVSHCGDCDHRAJNAGDUPAHDEUTSUWCECVRRJLZSSMBZJSTAUDNXUQVNFSJIKYMNDYRANICXIMZMJGOHTYGEMUTVOHHOLZPMJTUGGLUXXNWSAIMCTJNKVLYGVYATYQXDGHMRTXMGRQMDMCDORNWSCRYJGORQOIIBUFYUCTVLYCSVGORTEGYHSVMUGMXDJHMRXUBCOEAHNSOMGYVBUQXHGGHDHAIHSACXCNLSKMOYKDIQJHXZYCLEHWVTUCTVLZJNJQGBWRLRCVABZJMTUAHJRJVWUAGTDMCRCMBIMVMSCTUCWHGTPIJGZYLPSJHGYVOHSYTFHCHUXWIVLBVURQXMYRQFCMARUIKVLYCUTFXFKRREHMARFCMARPVNNRZUCTLVVCHLVHGCHXMLUHUEUACXMUACXWMACFUPHLACYGJBGXHSUIKVLUGSVLXGQJQTIJVDNSQVGOHMJIGHMLYGZMGSBGXHSVVLAKZGHJFDZHVMXWWPLVCUFKNWCBSNUONAXGQIBXMYLSIHQARRMUIKXUNFKDMQCTOMQPUMZQJQBFKIMXMYLIVMGLIMZTTKXMUHRAHMAINIZVLNWNDUMZCTKVCMCDBPEARAHMDSNWNJXABCOEDUPARUAUHGQCTVLNUONRAHMDCDFKBSDUYVTJIUDUAMLDHVVIRBOHSDLVWU